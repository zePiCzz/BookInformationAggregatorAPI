{
	"info": {
		"_postman_id": "b4dc417b-7551-4cb4-836f-dc10b76f780d",
		"name": "BookInformationAggregator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39915751"
	},
	"item": [
		{
			"name": "Returns all books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a book",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"4\",\r\n    \"title\": \"The Last Wish\",\r\n    \"author\": \"Andrzej Sapkowski\",\r\n    \"description\": \"The Last Wish is the first collection of short stories in The Witcher series, introducing Geralt of Rivia and his adventures in a world filled with magic, monsters, and political intrigue.\",\r\n    \"published_year\": 1993\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5180/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a book with an already existing ID",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"3\",\r\n    \"title\": \"The Last Wish\",\r\n    \"author\": \"Andrzej Sapkowski\",\r\n    \"description\": \"The Last Wish is the first collection of short stories in The Witcher series, introducing Geralt of Rivia and his adventures in a world filled with magic, monsters, and political intrigue.\",\r\n    \"published_year\": 1993\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5180/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a book by ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a book with a non-existent ID",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Searches for books in the API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/search?query=mockingbird",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "mockingbird"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Searches for books in the API with no query",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/search?query=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search book by Id from the API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/OL3140822W",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"OL3140822W"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search book by Id from the API with non-existant ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5180/books/OL3140822Ws",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5180",
					"path": [
						"books",
						"OL3140822Ws"
					]
				}
			},
			"response": []
		}
	]
}